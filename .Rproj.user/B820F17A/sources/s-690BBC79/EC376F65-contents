library(tidyverse)
library(scales)
library(readr)
library(ggrepel)
library(reshape2)
library(extrafont)
library(cowplot)
library(gt)

#importar####

sati <- read_delim("satisfaccion.txt", 
                   "\t", escape_double = FALSE, 
                   locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                   trim_ws = TRUE)
t_sati <- read_delim("t_sati.txt", 
                     "\t", escape_double = FALSE, 
                     locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                     trim_ws = TRUE)

la_sati <- read_delim("la_sati.txt", 
                      "\t", escape_double = FALSE, 
                      locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                      trim_ws = TRUE)
pibgr_ini <- read_delim("pib.txt", 
                   "\t", escape_double = FALSE, 
                   locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                   trim_ws = TRUE)
idhdes <- read_delim("idh.txt", 
                   "\t", escape_double = FALSE, 
                   locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                   trim_ws = TRUE)
civpol <- read_delim("civpol.txt", 
                     "\t", escape_double = FALSE, 
                     locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                     trim_ws = TRUE)
freedomhouse <- read_delim("freedomhouse.txt", 
                           delim = "\t", escape_double = FALSE, 
                           na = "NA", trim_ws = TRUE)
efectpp <-  read_delim("efectpp.txt", 
                     "\t", escape_double = FALSE, 
                     locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                     trim_ws = TRUE)     
efectpp_oecd <-  read_delim("efectpp_oecd.txt", 
                       "\t", escape_double = FALSE, 
                       locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                       trim_ws = TRUE)  
regul <-  read_delim("regul.txt", 
                       "\t", escape_double = FALSE, 
                       locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                       trim_ws = TRUE) 

intpocos <-  read_delim("int_pocos.txt", 
                         "\t", escape_double = FALSE, 
                         locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                         trim_ws = TRUE)
prot_social <- read_delim("protec_social.txt", 
                          "\t", escape_double = FALSE, 
                          locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                          trim_ws = TRUE)
pobreza <- read_delim("pobreza.txt", 
                      "\t", escape_double = FALSE, 
                      locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                      trim_ws = TRUE)

p90 <- read_delim("noventa.txt", 
                  delim = "\t", escape_double = FALSE, 
                  na = "NA", trim_ws = TRUE)


p99 <- read_delim("noventaynueve.txt", 
                  delim = "\t", escape_double = FALSE, 
                  na = "NA", trim_ws = TRUE)

gini <- read_delim("gini2.txt", 
                   "\t", escape_double = FALSE, 
                   locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."), 
                   trim_ws = TRUE)

#Satisfacción con la Democracia####

sati %>% 
  mutate(dife = y2020 - y1996) %>% 
  arrange(dife) -> sati

sati %>% 
  pivot_longer(cols = 2:4, 
               names_to = "yr",
               values_to = "valor") -> sati

sati %>% 
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = 1), 
            colour = "gray", alpha = .5, size = 2) +
  geom_point(aes(x = yr, y = valor, colour = yr), size = 4) +
  facet_wrap(~pais, nrow = 1) +
  ylim(0,100) +
  theme_minimal(base_family = "IBM Plex Sans") + 
  scale_color_viridis_d() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        strip.text.x = element_text(angle = 90),
        panel.grid = element_blank(),
        panel.background = element_rect(colour = "gray70"))

#Evol Satisfaccion 
la_sati %>%  
  mutate(iniciofinal = ifelse(yr == 1995 | yr == 2000 | yr == 2005 |
                              yr == 2010 | yr == 2015 | yr == 2020,
                              "si", "no")) -> la_sati

p1 <- la_sati %>% 
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = 1)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal)) +
  scale_size_manual(values = c("si" = 6, "no" = 0)) +
  geom_label_repel(aes(x = yr, y = valor,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 3.5, vjust = 0 , point.padding = 5, alpha = .67) +
  labs(title = "\n",
       subtitle = "\n",
       x = "\n Año",
       y = "Porcentaje",
       caption = "") +
  ylim(0,100) +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 9, angle = 36),
        plot.title = element_text(face = "bold")) +
  guides(size = "none")

p2 <- gt(t_sati) %>% 
  tab_options(table.font.size = 25) %>% 
  tab_style(style = list(cell_text(color = "red")), 
            locations = cells_body(columns = y1996, 
                                   rows = y1996 <= 50)) %>% 
  tab_style(style = list(cell_text(color = "red")), 
            locations = cells_body(columns = y2010, 
                                   rows = y2010 <= 50)) %>% 
  tab_style(style = list(cell_text(color = "red")), 
            locations = cells_body(columns = y2020, 
                                   rows = y2020 <= 50)) %>%
  tab_style(style = list(cell_text(weight = "bold")),
            locations = cells_body(rows = País == "Media de AL")) %>% 
  cols_label(y1996 = "1996", 
             y2010 = "2010", 
             y2020 = "2020",
             Diferencia = html("<center>Diferencia<br>(2010 a 2020)</center>")) %>% 
  opt_table_font("IBM Plex Sans")

p2 %>% gtsave("t_sati.png")

p2_plot <- ggdraw() + draw_image("t_sati.png", scale = 1)


grid1 <- plot_grid(p1, p2_plot, 
                   rel_widths = c(1, 0.6))

title <- ggdraw() + 
  draw_label("Satisfacción con la democracia en América Latina", 
             fontface = "bold", 
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 14) + 
  theme(plot.margin = margin(0, 0, 0, 7)) 

subtitle <- ggdraw() + 
  draw_label("Porcentaje",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 12) + 
  theme(plot.margin = margin(0, 0, 0, 7)) 
caption <- ggdraw() + 
  draw_label("Fuente: Latinobarómetro 2020",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 480)) 

plot_grid(title, subtitle, grid1, caption,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.05))


#Porcentaje de personas que cree que sus países están gobernados en beneficio de los intereses de unos pocos ####

int_pocos <- intpocos %>% 
  pivot_longer(2:4, 
               names_to = "yr", 
               values_to = "perc") %>% 
  mutate(yr = case_when(yr == "y2004" ~ 2004, 
                        yr == "y2010" ~ 2010,
                        yr == "y2020" ~ 2020), 
         id_al = ifelse(país == "América Latina", "si", "no"))
  
int_pocos_04 <- int_pocos %>% 
  filter(yr ==2004) %>% 
  arrange(perc)

int_pocos_10 <- int_pocos %>% 
  filter(yr ==2010) %>% 
  arrange(perc)

int_pocos_20 <- int_pocos %>% 
  filter(yr ==2020)



p_ip_20<- int_pocos_20 %>% 
  ggplot(aes(x = reorder(país, -perc), 
             y = perc))  +
  geom_bar(aes(fill=id_al), stat = "identity", position = "dodge", show.legend = F) +
  geom_text(aes(label = perc), hjust = - 0.2, family = "IBM Plex Sans") +
  labs(x = "", 
       y = "Porcentaje", 
       title = "2020") + 
  ylim(0, 100) + 
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold")) +
  coord_flip()

p_ip_10 <- int_pocos_10 %>% 
  ggplot(aes(x = reorder(país, -perc), 
             y = perc))  +
  geom_bar(aes(fill=id_al), stat = "identity", position = "dodge", show.legend = F) +
  geom_text(aes(label = perc), hjust = - 0.2, family = "IBM Plex Sans") +
  labs(x = "", 
       y = "Porcentaje", 
       title = "2010") + 
  ylim(0, 100) + 
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold")) +
  coord_flip()

p_ip_04 <- int_pocos_04 %>% 
  ggplot(aes(x = reorder(país, -perc), 
             y = perc))  +
  geom_bar(aes(fill=id_al), stat = "identity", position = "dodge", show.legend = F) +
  geom_text(aes(label = perc), hjust = - 0.2, family = "IBM Plex Sans") +
  ylim(0, 100) + 
  labs(x = "", 
       y = "Porcentaje", 
       title = "2004") + 
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold")) +
  coord_flip()

t_ip <- gt(intpocos) %>% 
  tab_options(table.font.size = 25) %>% 
  cols_label(país = "País",
             y2004 = "2004", 
             y2010 = "2010", 
             y2020 = "2020") %>% 
  opt_table_font("IBM Plex Sans")

t_ip %>% gtsave("int_pocos_t.png")

plot_t_ip <- ggdraw() + draw_image("int_pocos_t.png", scale = 1)

grid1 <- plot_grid(p_ip_04, p_ip_10, p_ip_20)
grid2 <- plot_grid(p_ip_20, plot_t_ip, 
                   rel_widths = c(1, 0.6))

title <- ggdraw() + 
  draw_label("Personas que creen que sus países están gobernados en beneficio de \nlos intereses de unos pocos", 
             fontface = "bold", 
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 14) + 
  theme(plot.margin = margin(3, 0, 0, 7)) 

subtitle <- ggdraw() + 
  draw_label("Porcentaje",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 12) + 
  theme(plot.margin = margin(0, 0, 0, 7)) 
caption <- ggdraw() + 
  draw_label("Fuente: Latinobarómetro 2020",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 480)) 


plot_grid(title, subtitle, grid1, caption,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.05))

plot_grid(title, subtitle, grid2, caption,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.05))

#Crecimiento del PIB####
pibgr_ini %>% 
  pivot_longer(2:6,
               names_to = "periodos",
               values_to = "variacion") -> pibgr

pibgr %>% 
  filter(región == "mundo") -> pibmundo

pibgr %>% 
  filter(región != "mundo") -> pibgr

pibmundo %>% 
  rename(Mundo = variacion) %>% 
  select(periodos, Mundo) %>% 
  right_join(pibgr) %>% 
  mutate(periodos = as.numeric(periodos)) -> pibgr

pibgr %>% 
  mutate(región = case_when (región == "africa" ~ "África\nSubsahariana",
                             región == "estasia" ~ "Este de Asia\ny Oceanía",
                             región == "europa" ~ "Unión\nEuropea",
                             región == "latam" ~ "Latinoamérica\ny el Caribe",
                             región == "mena" ~ "Medio Oriente\ny Norte de África",
                             región == "noram" ~ "Norte\nAmérica",
                             región == "sudasia" ~ "Sur de Asia")) %>% 
  mutate(lbl = paste0(variacion*100,"%")) -> pibgr

pibgr %>%
  ggplot(mapping = aes(x = factor(periodos), y = variacion, fill = región)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_errorbar(data = pibmundo, aes(periodos, ymax = variacion, ymin = variacion),
                size = .5, linetype = 2, inherit.aes = F, width = 1) +
  geom_text(aes(x = factor(periodos), 
                label = ifelse(región == "Latinoamérica\ny el Caribe",
                               lbl,""),
                family = "IBM Plex Sans Bold"),
            position = position_dodge(width = .7),
            size = 3.2) +
  labs(x = "\nPeriodos", y = "Variación del PIB\n",
       title = "Variación del Producto Interno Bruto",
       subtitle = "Latinoamérica y el Caribe en perspectiva comparada.\nPeriodo 1961 -  2019.\n",
       caption = "Fuente: Banco Mundial\nNota: La línea punteada es el promedio de variación mundial",
       fill = "Región", family = "IBM Plex Sans") +
  scale_y_continuous(breaks = seq(-.02,.055,.01),
                     labels = percent,
                     limits = c(-.02,.055)) +
  scale_x_discrete(labels = c ("1" = "1961\n1980",
                               "2" = "1981\n1990",
                               "3" = "1991\n2000",
                               "4" = "2001\n2012",
                               "5" = "2013\n2019")) +
  scale_fill_manual(values = c("#827498","#b88bac","#86af49",
                               "#f1e2cf","#af8c90","#d57f70","#dcb967")) +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"))

#IDH x desigualdad####

idh_cuba <- filter(idhdes, n == 7)
idh_latam <- filter(idhdes, n== 11)

idhdes <- idhdes %>%
  mutate(esmedia = ifelse(pais == "Media de América Latina", "si", "no"))

idhdes <- idhdes %>%
  mutate(nivelidh = ifelse(idhdesig > .8, "muy alto",
                           ifelse(idhdesig > .7, "alto",
                                  ifelse(idhdesig > .55, "medio","bajo"))))
idhdes[1,2] = "  "

idhdes %>%
  mutate(dif = idh-idhdesig) %>%
  pivot_longer(cols = c(idhdesig, idh)) -> idhdes

idh <- idhdes %>%
  filter(name == "idh") 
idhdesig <- idhdes %>% 
  filter(name == "idhdesig") 

ggplot(idhdes)+
  geom_segment(data = idh,
               aes(x = value, y = reorder(pais, -idhdesig$n),
                   yend = idhdesig$pais, xend = idhdesig$value),
               colour = "gray",
               size = 3.5,
               alpha =.66) +
  geom_point(aes(x = value, y = pais, colour = nivelidh, alpha = name),
             size = 3.5, show.legend = F)+
  geom_vline(xintercept = .8, colour = "#34a853") +
  geom_vline(xintercept = .7, colour = "#fbbc04") +
  geom_vline(xintercept = .55,colour = "#ea4335") +
  geom_point(data = idh_latam,
             aes(x = idhdesig, y = pais), colour = "black",
             alpha = 1, size = 4.5, show.legend = F) +
  geom_point(data = idh_cuba,
             aes(x = idh, y = pais), colour = "gray", shape = 15,
             alpha = 1, size = 3, show.legend = F) +
  geom_text(data = idh, aes(label = value, x = value, 
                            y = reorder(pais, idhdesig$value)),
            colour = "gray", hjust = -.5, 
            family = "IBM Plex Sans Semibold", size = 3) +
  geom_text(data = idhdesig, aes(label = value, x = value, 
                                 y = reorder(pais, idhdesig$value), colour = nivelidh),
            hjust = 1.5, family = "IBM Plex Sans Semibold", size = 3.5,
            show.legend = F) +
  scale_colour_manual(values = c("muy alto" = "#4285f4",
                                 "alto" = "#34a853",
                                 "medio" = "#fbbc04",
                                 "bajo" = "#ea4335")) +
  scale_alpha_manual(values = c("idhdesig" = 1,
                                "idh" = 0)) +
  labs(title = "\nÍndice de Desarrollo Humano en América Latina",
       subtitle = "Corregido por nivel de desigualdad\n",
       x = "\nÍndice de Desarrollo Humano",
       y = "",
       caption = "Fuente: PNUD 2020. Informe sobre Desarrollo Humano.
No existen datos de desigualdad del desarrollo humano en Cuba.") +
  annotate("text", x = .5, y = 22, label = "Bajo", size = 6,
           colour = "#ea4335", family="IBM Plex Sans Bold", alpha =.5) +
  annotate("text", x = .625, y = 22, label = "Medio", size = 6,
           colour = "#fbbc04", family="IBM Plex Sans Bold", alpha =.5) +
  annotate("text", x = .75, y = 22, label = "Alto", size = 6,
           colour = "#34a853", family="IBM Plex Sans Bold", alpha =.5) +
  annotate("text", x = .85, y = 22, label = "Muy Alto", size = 6,
           colour = "#4285f4", family="IBM Plex Sans Bold", alpha =.5) +
  xlim(.45,.95) +
  theme_classic(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"))


#Derechos Civiles y Políticos####

#reconstruir datos a partir de base Freedom House

freedomhouse %>% 
  select(pais, region, nivelidhdes, starts_with("pr")) -> dpol
freedomhouse %>% 
  select(pais, region, nivelidhdes, starts_with("cl")) -> lciv

dpol %>% 
  pivot_longer(4:30, names_to = "yr", values_to = "dpol") %>% 
  mutate(yr = str_remove(yr, "pr")) -> dpol

lciv %>% 
  pivot_longer(4:30, names_to = "yr", values_to = "lciv") %>% 
  mutate(yr = str_remove(yr, "cl")) -> lciv

lciv %>%
  right_join(dpol) %>% 
  mutate(valor = (lciv+dpol)/2) -> civpol

range01 <- function(x){(x-min(x))/(max(x)-min(x))}

civpol <- civpol %>% 
  mutate(valor = range01(valor), 
         valor = 1 -valor)

civpol %>% 
  mutate(iniciofinal = ifelse(yr == 1995 | yr == 2021, "si", "no")) -> civpol

civpol %>% 
  mutate(valor = round(valor, 2)) -> civpol

civpol %>%
  filter(region == "al") %>%
  group_by(yr) %>% 
  summarise(valor = round(mean(valor), 2)) -> cp_media_al

cp_media_al %>%
  mutate(pais = "América Latina") %>% 
  mutate(iniciofinal = ifelse(yr == 1995 | yr == 2000 | yr == 2005 |
                              yr == 2010 | yr == 2015 | yr == 2021,
                              "si", "no")) -> cp_media_al

civpol %>%
  filter(region == "oecd") %>%
  group_by(yr) %>% 
  summarise(valor = round(mean(valor), 2)) -> cp_media_oecd

cp_media_oecd %>%
  mutate(pais = "OECD sin América Latina") %>% 
  mutate(iniciofinal = ifelse(yr == 1995 | yr == 2000 | yr == 2005 |
                                yr == 2010 | yr == 2015 | yr == 2021,
                              "si", "no")) -> cp_media_oecd

bind_rows(cp_media_al, cp_media_oecd) -> civpol_region_comp

p_comp <- civpol_region_comp %>%
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
  scale_size_manual(values = c("si" = 6, "no" = -1)) +
  scale_colour_manual(values = c("América Latina" = "#86af49",
                                 "OECD sin América Latina" = "#d57f70")) +
  geom_label_repel(aes(x = yr, y = valor,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 4, point.padding = 5, alpha = .67, 
                   family = "IBM Plex Sans") +
  scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
  scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
  labs(title = "",
       subtitle = "",
       x = "\nAño",
       y = "Promedio de puntajes",
       caption = "") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size =10, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.position = "bottom", legend.title = element_blank()) +
  guides(size = "none", colour = guide_legend(nrow = 2))
  

#para países selectos

civpol %>% 
  filter(pais %in% c("Chile", "México", "Brasil", "Perú", "Costa Rica",
                     "Colombia", "El Salvador", "Uruguay", "Argentina", 
                     "Ecuador")) -> civpol_sel

p_line <- civpol_sel %>% 
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = 1, colour = nivelidhdes)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = nivelidhdes)) +
  scale_size_manual(values = c("si" = 2, "no" = -1)) +
  scale_colour_manual(values = c("muy alto" = "#4285f4",
                                 "alto" = "#34a853",
                                 "medio" = "#fbbc04",
                                 "bajo" = "#ea4335")) +
  geom_label_repel(aes(x = yr, y = valor,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 2.5, point.padding = 3, alpha = .67, min.segment.length = 1, 
                   family = "IBM Plex Sans") +
  facet_wrap(~reorder(pais, -valor), nrow = 2, ncol = 5) +
  scale_x_discrete(breaks = c(1995, 2000, 2005, 2010, 2015, 2020)) +
  scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
  labs(title = "",
       subtitle = "",
       x = "\nAño",
       y = "",
       caption = "",
       colour = "Índice de Desarrollo Humano\ndeflactado por Desigualdad") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 8, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.position = "bottom") +
  guides(size = "none", colour = guide_legend(nrow = 1))

#promedios por pais (cuartiles)

civpol %>%
  filter(region == "al") %>% 
  group_by(pais) %>% 
  summarise(valor = round(mean(valor), 2)) %>% 
  mutate(yr = "Promedio") %>%  
  mutate(cuartiles = ntile(valor, 4)) %>% 
  select(pais, cuartiles) %>% 
  left_join(y = civpol) %>% 
  group_by(cuartiles, yr) %>% 
  summarise(valor = round(mean(valor),2)) %>% 
  as_tibble() %>%
  mutate(iniciofinal = ifelse(yr == 1995 | yr == 2021, "si", "no")) %>% 
  mutate(cuartiles = case_when(cuartiles == 1 ~ "Primer Cuartil",
                               cuartiles == 2 ~ "Segundo Cuartil",
                               cuartiles == 3 ~ "Tercer Cuartil",
                               cuartiles == 4 ~ "Cuarto Cuartil")) -> civpol_media_al

p_q <- civpol_media_al %>%
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = cuartiles, colour = cuartiles)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = cuartiles)) +
  scale_size_manual(values = c("si" = 6, "no" = -1)) +
  geom_label_repel(aes(x = yr, y = valor, colour = cuartiles,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 4, point.padding = 5, alpha = .67, show.legend = F, 
                   family = "IBM Plex Sans") +
  scale_x_discrete(breaks = c(1995, 2000, 2005, 2010, 2015, 2020)) +
  scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
  scale_colour_manual(values = c("Cuarto Cuartil" = "#ea4335",
                                 "Tercer Cuartil" = "#fbbc04",
                                 "Segundo Cuartil" = "#34a853",
                                 "Primer Cuartil" = "#4285f4")) +
  labs(title = "",
       subtitle = "",
       x = "\nAño",
       y = "",
       caption = "",
       colour = "IDH") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 10, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.position = "bottom") +
  guides(size = "none", colour = guide_legend(nrow = 2))

#Graficamos
grid1 <- plot_grid(p_comp, p_line, rel_widths = c(0.8, 1))
grid2 <- plot_grid(p_comp, p_q)


title <- ggdraw() + 
  draw_label("Derechos Civiles y Políticos", 
             fontface = "bold", 
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 14) + 
  theme(plot.margin = margin(3, 0, 0, 7)) 

subtitle <- ggdraw() + 
  draw_label("Índice Freedom House - Estandarizado",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 12) + 
  theme(plot.margin = margin(0, 0, 0, 7)) 
caption1 <- ggdraw() + 
  draw_label("Fuente: Freedom House. \nPNUD 2020. Informe sobre Desarrollo Humano.",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 480)) 
caption2 <- ggdraw() + 
  draw_label("Fuente: Freedom House. \nPNUD 2020. Informe sobre Desarrollo Humano.\nNota: El primer cuartil corresponde a Argentina, Chile, Costa Rica Panamá y Uruguay; el segundo a Bolivia, Brasil, El Salvador, Perú y \nR. Dominicana; el tercero a Colombia, Ecuador, Honduras, México y Paraguay; y el cuarto a Cuba, Guatemala, Nicaragua y Venezuela",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 7))

plot_grid(title, subtitle, grid1, caption1,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.05))

plot_grid(title, subtitle, grid2, caption2,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.1))



#Efectividad Políticas Públicas####

efectpp %>% 
  pivot_longer(cols = 4:25, 
               names_to = "yr",
               values_to = "valor") -> efectpp

efectpp %>% 
  mutate(iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no")) -> efectpp

efectpp %>%
  group_by(yr) %>% 
  summarise(valor = round(mean(valor), 2)) -> efectppmean

efectppmean %>% 
  mutate(pais = "América Latina",
         iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no")) %>% 
  mutate(nivelidh = "alto") %>% 
  mutate(nivelidhdes = "medio") -> efectppmean

#agrego lo de oecd
efectpp_oecd <- efectpp_oecd %>% 
  pivot_longer(4:25,  
               names_to = "yr",
               values_to = "valor") %>% 
  mutate(iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no"))

efectppmean <- efectppmean %>% 
  bind_rows(efectpp_oecd)


p_comp <- efectppmean %>% 
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = pais, colour = pais), size = 1.5) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
  scale_size_manual(values = c("si" = 4, "no" = -1)) +
  geom_label_repel(aes(x = yr, y = valor, colour = pais,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 4, point.padding = 5, alpha = .67, show.legend = F, 
                   family = "IBM Plex Sans") +
  scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020)) +
  labs(title = "",
       subtitle = "",
       x = "Año\n",
       y = "\nPercentil en que se ubica el país",
       caption = "") +
  ylim(0,100) +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 10, angle = 36),
        plot.title = element_text(face = "bold"), 
        legend.position = "bottom") +
  guides(size = "none", color = guide_legend(title=" "))

#para todos los países

efectppmean %>% 
  bind_rows(efectpp) -> efectpp2

#efectpp2 %>% 
#  ggplot() +
#  geom_line(aes(x = yr, y = valor, group = 1)) +
#  geom_point(aes(x = yr, y = valor, size = iniciofinal)) +
#  scale_size_manual(values = c("si" = 2, "no" = -1)) +
#  geom_label_repel(aes(x = yr, y = valor,
#                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
#                   size = 2.5, point.padding = 3, alpha = .67, min.segment.length = 1, 
#                   family = "IBM Plex Sans") +
#  facet_wrap(~reorder(pais, -valor), nrow = 5, ncol = 4) +
#  scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020),) +
#  labs(title = "\nEfectividad de las Políticas Públicas",
#       subtitle = "Percepción de calidad e independencia de servicios públicos.
#Medias para regiones, periodo 1996 - 2020.",
#       x = "Año\n",
#       y = "\nPercentil en que se ubica el país",
#       caption = "Fuente: Indicadores de Gobernanza Mundial (WGI), 2020.") +
#  ylim(0,100) +
#  theme_minimal(base_family = "IBM Plex Sans") +
#  theme(axis.text = element_text(size = 8, angle = 36),
#        plot.title = element_text(face = "bold")) +
#  guides(size = "none")

#para países selectos

efectpp2 %>% 
  filter(pais %in% c("Chile", "México", "Brasil", "Perú", "Costa Rica",
                     "Colombia", "El Salvador", "Uruguay", "Argentina", 
                     "Ecuador")) -> efectpp_sel

p_line <- efectpp_sel %>% 
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = 1, colour = nivelidhdes)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = nivelidhdes)) +
  scale_size_manual(values = c("si" = 2, "no" = -1)) +
  scale_colour_manual(values = c("muy alto" = "#4285f4",
                                 "alto" = "#34a853",
                                 "medio" = "#fbbc04",
                                 "bajo" = "#ea4335")) +
  geom_label_repel(aes(x = yr, y = valor,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 2.5, point.padding = 3, alpha = .67, min.segment.length = 1, 
                   family = "IBM Plex Sans") +
  facet_wrap(~reorder(pais, -valor), nrow = 2, ncol = 5) +
  scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020),) +
  labs(title = "",
       subtitle = "",
       x = "Año\n",
       y = "",
       caption = "",
       colour = "IDH deflactado \npor Desigualdad") +
  ylim(0,100) +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 8, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.position = "bottom") +
  guides(size = "none", colour = guide_legend(nrow = 1))

#promedios por pais (cuartiles)

efectpp %>%
  group_by(pais) %>% 
  summarise(valor = round(mean(valor), 2)) %>% 
  mutate(yr = "Promedio") %>%  
  mutate(cuartiles = ntile(valor, 4)) %>% 
  select(pais, cuartiles) %>% 
  left_join(y = efectpp) %>% 
  group_by(cuartiles,yr) %>% 
  summarise(valor = round(mean(valor),2)) %>% 
  as_tibble() %>%
  mutate(iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no")) %>% 
  mutate(cuartiles = case_when(cuartiles == 1 ~ "Primer Cuartil",
                               cuartiles == 2 ~ "Segundo Cuartil",
                               cuartiles == 3 ~ "Tercer Cuartil",
                               cuartiles == 4 ~ "Cuarto Cuartil")) -> efectpp_media3

#efectppmean %>% 
#  rename(cuartiles = pais) %>% 
#  bind_rows(efectpp_media3) -> efectppmean

p_q <- efectpp_media3 %>%
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = cuartiles, colour = cuartiles)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = cuartiles)) +
  scale_size_manual(values = c("si" = 6, "no" = -1)) +
  geom_label_repel(aes(x = yr, y = valor, colour = cuartiles,
                       label = ifelse(iniciofinal == "si", as.character(valor),"")),
                   size = 4, point.padding = 5, alpha = .67, show.legend = F) +
  scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020)) +
  scale_colour_manual(values = c("Cuarto Cuartil" = "#4285f4",
                                 "Tercer Cuartil" = "#34a853",
                                 "Segundo Cuartil" = "#fbbc04",
                                 "Primer Cuartil" = "#ea4335")) +
  labs(title = "",
       subtitle = "",
       x = "Año\n",
       y = "",
       caption = "") +
  ylim(0,100) +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 10, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.title = element_blank(), 
        legend.position = "bottom") +
  guides(size = "none")

#Graficamos
grid1 <- plot_grid(p_comp, p_line, rel_widths = c(0.8, 1))
grid2 <- plot_grid(p_comp, p_q)


title <- ggdraw() + 
  draw_label("\nEfectividad de las Políticas Públicas", 
             fontface = "bold", 
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 14) + 
  theme(plot.margin = margin(3, 0, 0, 7)) 

subtitle <- ggdraw() + 
  draw_label("Percepción de calidad e independencia de servicios públicos.",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 12) + 
  theme(plot.margin = margin(0, 0, 0, 7)) 
caption1 <- ggdraw() + 
  draw_label("Fuente: Indicadores de Gobernanza Mundial (WGI), 2020. \nInforme sobre Desarrollo Humano. PNUD, 2020.",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 480)) 
caption2 <- ggdraw() + 
  draw_label("Fuente: Indicadores de Gobernanza Mundial (WGI), 2020.\nNota: el primer cuartil corresponde a Ecuador, Honduras, Nicaragua, Paraguay y Venezuela; el segundo a Bolivia, Cuba, El Salvador, Perú y República Dominicana; \nel tercero a Argentina, Brasil, Colombia y México; y el cuarto a Chile, Costa Rica, Panamá y Uruguay.",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 7))

plot_grid(title, subtitle, grid1, caption1,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.05))

plot_grid(title, subtitle, grid2, caption2,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.1))

#Gini antes y despues de impuestos y transferencias ####
gini %>% 
  filter(region == "oecd") -> gini_oecd
gini %>% 
  filter(region == "al") %>% 
  na.omit() -> gini_latam

media_oecd <- c("OECD sin AL",
                "oecd", 
                round(mean(gini_oecd$gini), 3), 
                round(mean(gini_oecd$gini_trans), 3),
                round(mean(gini_oecd$dif), 3),
                "2020",
                "OECD, 2021")

rbind(gini_latam, media_oecd) %>% 
  mutate(gini = as.numeric(gini),
         gini_trans = as.numeric(gini_trans),
         dif = as.numeric(dif)) -> giniplot

ggplot(giniplot) +
  xlim(0,1) +
  geom_segment(aes(x = gini_trans, y = reorder(pais, -dif),
                   yend = pais, xend = gini),
               colour = "gray33",
               size = 1) +
  geom_point(aes(x = gini, y = pais), colour = "#ea4335",
             size = 3, shape = 19, show.legend = F) +
  geom_point(aes(x = gini_trans, y = pais), fill = "cyan4", colour = "cyan4",
             size = 2.5, shape = 25, show.legend = F) +
  geom_text(aes(label = gini, x = gini, 
                y = reorder(pais, gini)),
            colour = "#ea4335", vjust = - 2.5, 
            family = "IBM Plex Sans Semibold", size = 3.5) +
  geom_text(aes(label = gini_trans, x = gini_trans, 
                y = reorder(pais, gini)),
            colour = "cyan4", vjust = 3.5,
            family = "IBM Plex Sans Semibold", size = 3.5,
            show.legend = F) +
  coord_flip() +
  labs(title = "\nReducción de desigualdad por impuestos y transferencias",
       subtitle = "11 países de América Latina y media de OECD (sin AL). Década de 2010.",
       x = "Índice Gini\n",
       y = "",
       caption = "Fuente: OECD, 2021. OECD, 2016.
CEPAL, 2021. Rodríguez-Guerrero, 2019.
Banco Mundial, 2018. Hanni, Martner y Podestá, 2015") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"),
        axis.text = element_text(size = 10, angle = 33))

#Proporción de ingresos del 1% y el 10% más alto en América Latina 2000-2019 ####

p90 %>% 
  pivot_longer(3:56, names_to = "pais", values_to = "p90") %>% 
  select(-percentil) -> ingresos_altos

p99 %>% 
  pivot_longer(3:56, names_to = "pais", values_to = "p99") %>% 
  select(-percentil) %>% 
  right_join(ingresos_altos) -> ingresos_altos

ingresos_altos %>% 
  filter(pais == "América Latina" | pais == "Mundo") -> ia_corta

ingresos_altos %>% 
  filter(!(pais == "América Latina" | pais == "Mundo")) -> ingresos_altos

writexl::write_xlsx(ingresos_altos, "ingresos_altos.xlsx") #carretoneo cochino

ingresos_altos <- readxl::read_xlsx("ingresos_altos.xlsx")

ia_al <- ingresos_altos %>% 
  filter(al == 1)

ia_oecd <- ingresos_altos %>% 
  filter(al == 0) %>% 
  group_by(yr) %>% 
  summarise(p99 = round(mean(p99), 2), p90 = round(mean(p90), 2)) %>% 
  mutate(pais = "OCDE sin AL")
  
ingresos_altos_trends <- ia_corta %>% bind_rows(ia_oecd) %>% group_by(yr) %>% 
  mutate(iniciofinal = ifelse(yr == 1980 | yr == 1990 | yr == 2000 |
                                yr == 2010 |  yr == 2021,
                              "si", "no")) %>% 
  pivot_longer(3:4, names_to = "indicador", values_to = "valor") %>% 
  mutate(indicador = case_when(indicador == "p90" ~ "10% más rico", 
                               indicador == "p99" ~ "1% más rico"), 
         paisind = paste(pais, "-", indicador), 
         lbl = paste0(round(valor*100), "%")) %>% 
  filter(pais != "Mundo")


p_comp <- ingresos_altos_trends %>%
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = paisind, colour = pais)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais, shape = indicador)) +
  scale_size_manual(values = c("si" = 2.5, "no" = -1)) +
  scale_colour_manual(values = c("América Latina" = "#dcb967",
                                 "OCDE sin AL" = "#d57f70")) +
  geom_label_repel(aes(x = yr, y = valor,
                       label = ifelse(iniciofinal == "si", as.character(lbl),""), color = pais),
                   size = 3, point.padding = 4, alpha = .87, max.overlaps = 9999, 
                   family = "IBM Plex Sans", show.legend = F) +
  scale_y_continuous(labels = percent, limits = c(0,1), breaks = seq(0, 1, 0.2)) + 
  labs(title = "",
       subtitle = "",
       x = "\nAño",
       y = "",
       caption = "") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size =10, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.position = "bottom", legend.title = element_blank()) +
  guides(size = "none", colour = guide_legend(nrow = 2))


ia_al_sel <- ia_al %>% 
  filter(pais %in% c("Chile", "México", "Brasil", "Perú", "Costa Rica",
                     "Colombia", "El Salvador", "Uruguay", "Argentina", 
                     "Ecuador")) %>% 
  pivot_longer(4:5, 
               names_to = "indicador", 
               values_to = "valor") %>% 
  mutate(indicador = case_when(indicador == "p90" ~ "10% más rico", 
                               indicador == "p99" ~ "1% más rico"), 
         paisind = paste(pais, "-", indicador), 
         lbl = paste0(round(valor*100), "%")) %>% 
  mutate(iniciofinal = ifelse(yr == 1980 | yr == 2021,
                              "si", "no")) 

p_line <- ia_al_sel %>% 
  ggplot() +
  geom_line(aes(x = yr, y = valor, group = indicador, colour = indicador)) +
  geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = indicador)) +
  scale_size_manual(values = c("si" = 2, "no" = -1)) +
  geom_label_repel(aes(x = yr, y = valor,
                       label = ifelse(iniciofinal == "si", as.character(lbl),"")),
                   size = 2.5, point.padding = 3, alpha = .67, min.segment.length = 1, 
                   family = "IBM Plex Sans") +
  facet_wrap(~reorder(pais, -valor), nrow = 2, ncol = 5) +
  scale_y_continuous(labels = percent, limits = c(0,1), breaks = seq(0, 1, 0.2)) +
  labs(title = "",
       subtitle = "",
       x = "\nAño",
       y = "",
       caption = "",
       colour = "") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(axis.text = element_text(size = 8, angle = 36),
        plot.title = element_text(face = "bold"),
        legend.position = "bottom") +
  guides(size = "none")

grid <- plot_grid(p_comp, p_line, rel_widths = c(0.7, 1))


title <- ggdraw() + 
  draw_label("Proporción de ingresos del 1% y el 10% más alto en América Latina 2000-2019", 
             fontface = "bold", 
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 14) + 
  theme(plot.margin = margin(3, 0, 0, 7)) 

subtitle <- ggdraw() + 
  draw_label("Comparado con datos del mundo y de la OCDE. Selección de 10 países",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 12) + 
  theme(plot.margin = margin(0, 0, 0, 7)) 
caption <- ggdraw() + 
  draw_label("Fuente: World Inequality Database",
             fontfamily = "IBM Plex Sans",
             x = 0, 
             hjust = 0, 
             size = 9) + 
  theme(plot.margin = margin(0, 0, 0, 630)) 

plot_grid(title, subtitle, grid, caption,
          ncol = 1, 
          rel_heights = c(0.05, 0.05, 1, 0.05))


#Porcentaje de la fuerza de trabajo excluida de la seguridad social contributiva ####
prot_social <- prot_social %>% 
  mutate(lbl = paste0(valor, "%"))


prot_social %>% 
  ggplot(aes(fill=población)) +
  geom_bar(aes(x=reorder(factor(pais), -n), y=valor), stat="identity", position = "dodge") +
  scale_y_continuous(breaks = seq(0,100,10),
                     limits = c(0,100)) +
  geom_text(aes(x=factor(pais), y=valor, label=ifelse(valor != 0, as.character(lbl),""), colour=población), family = "IBM Plex Sans Semibold", position = position_dodge(width = .9),
            size = 3.5, vjust=0.3, hjust = -0.1) +
  labs(x="", 
       y = "Porcentaje", 
       subtitle = "En porcentajes. Selección de 10 países",
       title = "Porcentaje de la fuerza de trabajo excluida de la seguridad social contributiva", 
       caption = "Fuente: PNUD 2021. Informe Regional de Desarollo Humano") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"),
        legend.position = "bottom",
        legend.title = element_blank()) +
          coord_flip()



#América Latina (18 países): tasas de pobreza y pobreza extrema y personas en situación de pobreza y pobreza extrema, 1990 - 2021 ####
pobreza %>% 
  pivot_longer(2:3, 
               names_to = "tipo", 
               values_to = "valor") %>% 
  mutate(lbl = paste0(round(valor*100, 2), "%")) -> pobreza

pobreza %>% 
  ggplot(aes(fill=tipo)) +
  geom_bar(aes(x=factor(yr), y=valor), stat="identity", position = "dodge") +
  scale_y_continuous(breaks = seq(0,1,.1),
                     labels = percent,
                     limits = c(0,1)) +
  geom_text(aes(x=factor(yr), y=valor, label=lbl, colour=tipo), family = "IBM Plex Sans Semibold", position = position_dodge(width = .9),
            size = 3.5, vjust=-0.15) +
  labs(x="Año", 
       y = "Porcentaje", 
       subtitle = "En porcentajes",
       title = "América Latina (18 países): tasas de pobreza y pobreza extrema, 1990 - 2021", 
       caption = "Fuente: Fuente: PNUD 2021. Informe Regional de Desarollo Humano") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"),
        legend.position = "bottom",
        legend.title = element_blank())

#Recaudación tributaria como % del PIB####

recaud %>% 
  mutate(valor = valor/100) -> recaud

ggplot(recaud) +
  geom_segment(aes(x = 0, y = reorder(pais, valor),
                   yend = pais, xend = valor),
               colour = "gray50",
               size = 1) +
  geom_point(aes(x = valor, y = pais, colour = region),
             size = 3, shape = 19, show.legend = T) +
  geom_text(aes(label = valor, x = valor, 
                y = reorder(pais, valor), colour = region),
            hjust = - 0.5, 
            family = "IBM Plex Sans Semibold", size = 3.5) +
  scale_x_continuous(labels = percent,
                     limits = c(0,.5)) +
  labs(title = "\nRecaudación tributaria como proporción del PIB en América Latina, 2020",
       subtitle = "11 países de América Latina y media de OECD (sin AL). Década de 2010.",
       x = "Proporción\n",
       y = "\nPaíses y regiones",
       caption = "Fuente OCDE et al., 2022. Estadísticas tributarias en América Latina y el Caribe 1990-2020",
       colour = "Regiones") +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"),
        axis.text = element_text(size = 10))

#Impuestos y conribuciones como % del total####

recaud_reg %>% 
  pivot_longer(2:3,
               names_to = "region",
               values_to = "valor") -> recaud_reg

recaud_reg %>% 
  mutate(valorporciento = valor/100) -> recaud_reg

recaud_reg %>%
  ggplot(mapping = aes(x = tipo, y = valorporciento, fill = region)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(x = tipo, y = valorporciento, label = valor),
            family = "IBM Plex Sans Bold",
            size = 3.5, position = position_dodge2(.85), vjust = -1) +
  scale_y_continuous(breaks = seq(-.2,.55,.1),
                     labels = percent,
                     limits = c(0,.3)) +
  labs(x = "\nTipo de Impuesto o Contribución", y = "Porcentaje\n",
       title = "Recaudación de impuestos y contribuciones selectas\ncomo porcentaje de la recaudación total",
       subtitle = "Comparación de América Latina y el Caribe y demás países OECD\n",
       caption = "Fuente: cálculos propios basados en (OECD et al., 2022 [3]),\n«revenue statistics in Latin america: comparative tables», OECD Tax Statistics (database)",
       fill = "Región", family = "IBM Plex Sans") +
  scale_x_discrete(labels = c ("ssocial" = "Contribuciones a la\nSeguridad Social",
                               "rentaper" = "Impuesto a la Renta\na las personas",
                               "iva" = "Impuesto al Valor\nAgregado")) +
  scale_fill_manual(values = c("#86af49","#d57f70")) +
  theme_minimal(base_family = "IBM Plex Sans") +
  theme(plot.title = element_text(face = "bold"),
        legend.position = "bottom")

