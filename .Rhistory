efectpp %>%
group_by(yr) %>%
summarise(valor = round(mean(valor), 2)) -> efectppmean
efectppmean %>%
mutate(pais = "América Latina",
iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no")) %>%
mutate(nivelidh = "alto") %>%
mutate(nivelidhdes = "medio") -> efectppmean
#agrego lo de oecd
efectpp_oecd <- efectpp_oecd %>%
pivot_longer(4:25,
names_to = "yr",
values_to = "valor") %>%
mutate(iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no"))
efectppmean <- efectppmean %>%
bind_rows(efectpp_oecd)
efectppmean %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais), size = 1.5) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 4, "no" = -1)) +
geom_label_repel(aes(x = yr, y = valor, colour = pais,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67, show.legend = F,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020)) +
labs(title = "",
subtitle = "",
x = "Año\n",
y = "\nPercentil en que se ubica el país",
caption = "") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom") +
guides(size = "none", color = guide_legend(title = " "))
p_comp <- efectppmean %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais), size = 1.5) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 4, "no" = -1)) +
geom_label_repel(aes(x = yr, y = valor, colour = pais,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67, show.legend = F,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020)) +
labs(title = "",
subtitle = "",
x = "Año\n",
y = "\nPercentil en que se ubica el país",
caption = "") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom") +
guides(size = "none", color = guide_legend(title = " "))
efectppmean %>%
bind_rows(efectpp) -> efectpp2
efectpp2 %>%
filter(pais %in% c("Chile", "México", "Brasil", "Perú", "Costa Rica",
"Colombia", "El Salvador", "Uruguay", "Argentina",
"Ecuador")) -> efectpp_sel
efectpp_sel %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = 1, colour = nivelidhdes)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = nivelidhdes)) +
scale_size_manual(values = c("si" = 2, "no" = -1)) +
scale_colour_manual(values = c("muy alto" = "#4285f4",
"alto" = "#34a853",
"medio" = "#fbbc04",
"bajo" = "#ea4335")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 2.5, point.padding = 3, alpha = .67, min.segment.length = 1,
family = "IBM Plex Sans") +
facet_wrap(~reorder(pais, -valor), nrow = 2, ncol = 5) +
scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020),) +
labs(title = "",
subtitle = "",
x = "Año\n",
y = "",
caption = "",
colour = "IDH deflactado \npor Desigualdad") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 8, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom") +
guides(size = "none", colour = guide_legend(nrow = 1))
efectpp %>%
group_by(pais) %>%
summarise(valor = round(mean(valor), 2)) %>%
mutate(yr = "Promedio") %>%
mutate(cuartiles = ntile(valor, 4)) %>%
select(pais, cuartiles) %>%
left_join(y = efectpp) %>%
group_by(cuartiles,yr) %>%
summarise(valor = round(mean(valor),2)) %>%
as_tibble() %>%
mutate(iniciofinal = ifelse(yr == 1996 | yr == 2020, "si", "no")) %>%
mutate(cuartiles = case_when(cuartiles == 1 ~ "Primer Cuartil",
cuartiles == 2 ~ "Segundo Cuartil",
cuartiles == 3 ~ "Tercer Cuartil",
cuartiles == 4 ~ "Cuarto Cuartil")) -> efectpp_media3
p_q <- efectpp_media3 %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = cuartiles, colour = cuartiles)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = cuartiles)) +
scale_size_manual(values = c("si" = 4, "no" = -1)) +
geom_label_repel(aes(x = yr, y = valor, colour = cuartiles,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67, show.legend = F) +
scale_x_discrete(breaks = c(1996, 2000, 2005, 2010, 2015, 2020)) +
scale_colour_manual(values = c("Cuarto Cuartil" = "#4285f4",
"Tercer Cuartil" = "#34a853",
"Segundo Cuartil" = "#fbbc04",
"Primer Cuartil" = "#ea4335")) +
labs(title = "",
subtitle = "",
x = "Año\n",
y = "",
caption = "") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 10, angle = 36),
plot.title = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "bottom") +
guides(size = "none")
grid2 <- plot_grid(p_comp, p_q)
title <- ggdraw() +
draw_label("\nGráfica N° 8: Efectividad de las políticas públicas",
fontface = "bold",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 14) +
theme(plot.margin = margin(3, 0, 0, 7))
subtitle <- ggdraw() +
draw_label("Percepción de calidad e independencia de servicios públicos.",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 12) +
theme(plot.margin = margin(0, 0, 0, 7))
caption1 <- ggdraw() +
draw_label("Fuente: Indicadores de Gobernanza Mundial (WGI), 2020. \nInforme sobre Desarrollo Humano. PNUD, 2020.",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 9) +
theme(plot.margin = margin(0, 0, 0, 480))
caption2 <- ggdraw() +
draw_label("Fuente: Indicadores de Gobernanza Mundial (WGI), 2020.\nNota: el primer cuartil corresponde a Ecuador, Honduras, Nicaragua, Paraguay y Venezuela; el segundo a Bolivia, Cuba, El Salvador, Perú y República Dominicana; \nel tercero a Argentina, Brasil, Colombia y México; y el cuarto a Chile, Costa Rica, Panamá y Uruguay.",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 9) +
theme(plot.margin = margin(0, 0, 0, 7))
plot_grid(title, subtitle, grid2, caption2,
ncol = 1,
rel_heights = c(0.05, 0.05, 1, 0.1))
plot_grid(title, subtitle, grid2, caption2,
ncol = 1,
rel_heights = c(0.05, 0.05, 1, 0.1)) -> grafica8
gini <- read_delim("entrada/gini2.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
#Gini antes y despues de impuestos y transferencias ####
gini %>%
filter(region == "oecd") -> gini_oecd
gini %>%
filter(region == "al") %>%
na.omit() -> gini_latam
media_oecd <- c("OECD sin AL",
"oecd",
round(mean(gini_oecd$gini), 3),
round(mean(gini_oecd$gini_trans), 3),
round(mean(gini_oecd$dif), 3),
"2020",
"OECD, 2021")
rbind(gini_latam, media_oecd) %>%
mutate(gini = as.numeric(gini),
gini_trans = as.numeric(gini_trans),
dif = as.numeric(dif)) -> giniplot
ggplot(giniplot) +
xlim(0,1) +
geom_segment(aes(x = gini_trans, y = reorder(pais, -dif),
yend = pais, xend = gini),
colour = "gray33",
size = 1) +
geom_point(aes(x = gini, y = pais), colour = "#ea4335",
size = 3, shape = 19, show.legend = F) +
geom_point(aes(x = gini_trans, y = pais), fill = "cyan4", colour = "cyan4",
size = 2.5, shape = 25, show.legend = F) +
geom_text(aes(label = gini, x = gini,
y = reorder(pais, gini)),
colour = "#ea4335", vjust = -2.5,
family = "IBM Plex Sans Semibold", size = 3.5) +
geom_text(aes(label = gini_trans, x = gini_trans,
y = reorder(pais, gini)),
colour = "cyan4", vjust = 3.5,
family = "IBM Plex Sans Semibold", size = 3.5,
show.legend = F) +
coord_flip() +
labs(title = "\nGráfica N° 9: Reducción de desigualdad por impuestos y transferencias",
subtitle = "11 países de América Latina y media de OECD (sin AL). Década de 2010.",
x = "Índice Gini\n",
y = "",
caption = "Fuente: OECD, 2021. OECD, 2016.
CEPAL, 2021. Rodríguez-Guerrero, 2019.
Banco Mundial, 2018. Hanni, Martner y Podestá, 2015") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold"),
axis.text = element_text(size = 10, angle = 33))
ggplot(giniplot) +
xlim(0,1) +
geom_segment(aes(x = gini_trans, y = reorder(pais, -dif),
yend = pais, xend = gini),
colour = "gray33",
size = 1) +
geom_point(aes(x = gini, y = pais), colour = "#ea4335",
size = 3, shape = 19, show.legend = F) +
geom_point(aes(x = gini_trans, y = pais), fill = "cyan4", colour = "cyan4",
size = 2.5, shape = 25, show.legend = F) +
geom_text(aes(label = gini, x = gini,
y = reorder(pais, gini)),
colour = "#ea4335", vjust = -2.5,
family = "IBM Plex Sans Semibold", size = 3.5) +
geom_text(aes(label = gini_trans, x = gini_trans,
y = reorder(pais, gini)),
colour = "cyan4", vjust = 3.5,
family = "IBM Plex Sans Semibold", size = 3.5,
show.legend = F) +
coord_flip() +
labs(title = "\nGráfica N° 9: Reducción de desigualdad por impuestos y transferencias",
subtitle = "11 países de América Latina y media de OECD (sin AL). Década de 2010.",
x = "Índice Gini\n",
y = "",
caption = "Fuente: OECD, 2021. OECD, 2016.
CEPAL, 2021. Rodríguez-Guerrero, 2019.
Banco Mundial, 2018. Hanni, Martner y Podestá, 2015") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold"),
axis.text = element_text(size = 10, angle = 33)) -> grafica9
grafica_1a
sati <- read_delim("entrada/satisfaccion.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
t_sati <- read_delim("entrada/t_sati.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
la_sati <- read_delim("entrada/la_sati.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
intpocos <-  read_delim("entrada/int_pocos.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
sati %>%
mutate(dife = y2020 - y1996) %>%
arrange(dife) -> sati
sati %>%
pivot_longer(cols = 2:4,
names_to = "yr",
values_to = "valor") -> sati
sati %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = 1),
colour = "gray", alpha = .5, size = 2) +
geom_point(aes(x = yr, y = valor, colour = yr), size = 4) +
facet_wrap(~pais, nrow = 1) +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
scale_color_viridis_d() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(angle = 90),
panel.grid = element_blank(),
panel.background = element_rect(colour = "gray70"))
#Evol Satisfaccion
la_sati %>%
mutate(iniciofinal = ifelse(yr == 1995 | yr == 2000 | yr == 2005 |
yr == 2010 | yr == 2015 | yr == 2020,
"si", "no")) -> la_sati
la_sati %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = 1)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal)) +
scale_size_manual(values = c("si" = 6, "no" = 0)) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 3.5, vjust = 0 , point.padding = 5, alpha = .67) +
labs(title = "\n",
subtitle = "\n",
x = "\n Año",
y = "Porcentaje",
caption = "") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 9, angle = 36),
plot.title = element_text(face = "bold")) +
guides(size = "none")
la_sati %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = 1)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal)) +
scale_size_manual(values = c("si" = 4, "no" = 0)) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 3.5, vjust = 0 , point.padding = 5, alpha = .67) +
labs(title = "\n",
subtitle = "\n",
x = "\n Año",
y = "Porcentaje",
caption = "") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 9, angle = 36),
plot.title = element_text(face = "bold")) +
guides(size = "none")
grafica1 <- la_sati %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = 1)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal)) +
scale_size_manual(values = c("si" = 4, "no" = 0)) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 3.5, vjust = 0 , point.padding = 5, alpha = .67) +
labs(title = "\n",
subtitle = "\n",
x = "\n Año",
y = "Porcentaje",
caption = "") +
ylim(0,100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 9, angle = 36),
plot.title = element_text(face = "bold")) +
guides(size = "none")
p1 <- grafica1
int_pocos <- intpocos %>%
pivot_longer(2:4,
names_to = "yr",
values_to = "perc") %>%
mutate(yr = case_when(yr == "y2004" ~ 2004,
yr == "y2010" ~ 2010,
yr == "y2020" ~ 2020),
id_al = ifelse(país == "América Latina", "si", "no"))
int_pocos_04 <- int_pocos %>%
filter(yr == 2004) %>%
arrange(perc)
int_pocos_10 <- int_pocos %>%
filter(yr == 2010) %>%
arrange(perc)
int_pocos_20 <- int_pocos %>%
filter(yr == 2020)
p_ip_20 <- int_pocos_20 %>%
ggplot(aes(x = reorder(país, -perc),
y = perc))  +
geom_bar(aes(fill=id_al), stat = "identity", position = "dodge", show.legend = F) +
geom_text(aes(label = perc), hjust = - 0.2, family = "IBM Plex Sans") +
labs(x = "",
y = "Porcentaje",
title = "2020") +
ylim(0, 100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold")) +
coord_flip()
p_ip_10 <- int_pocos_10 %>%
ggplot(aes(x = reorder(país, -perc),
y = perc))  +
geom_bar(aes(fill = id_al), stat = "identity", position = "dodge", show.legend = F) +
geom_text(aes(label = perc), hjust = - 0.2, family = "IBM Plex Sans") +
labs(x = "",
y = "Porcentaje",
title = "2010") +
ylim(0, 100) +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold")) +
coord_flip()
p_ip_04 <- int_pocos_04 %>%
ggplot(aes(x = reorder(país, -perc),
y = perc))  +
geom_bar(aes(fill = id_al), stat = "identity", position = "dodge", show.legend = F) +
geom_text(aes(label = perc), hjust = - 0.2, family = "IBM Plex Sans") +
ylim(0, 100) +
labs(x = "",
y = "Porcentaje",
title = "2004") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold")) +
coord_flip()
grid1 <- plot_grid(p_ip_04, p_ip_10, p_ip_20)
grid1
grafica2 <- p_ip_20
grafica2
library(rvg)
library(officer)
install.packages(c("rvg", "officer"))
library(rvg)
library(officer)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g1_dml <- dml(ggobj = grafica1)
g2_dml <- dml(ggobj = grafica2)
g3_dml <- dml(ggobj = grafica3)
g4_dml <- dml(ggobj = grafica4)
g5_dml <- dml(ggobj = grafica5)
g6_dml <- dml(ggobj = grafica6)
g7_dml <- dml(ggobj = grafica7)
g8_dml <- dml(ggobj = grafica8)
g9_dml <- dml(ggobj = grafica9)
g1_dml
read_pptx() %>%
add_slide() %>%
ph_with(g1_dml, ph_location()) %>%
add_slide() %>%
ph_with(g2_dml, ph_location()) %>%
add_slide() %>%
ph_with(g3_dml, ph_location()) %>%
add_slide() %>%
ph_with(g4_dml, ph_location()) %>%
add_slide() %>%
ph_with(g5_dml, ph_location()) %>%
add_slide() %>%
ph_with(g6_dml, ph_location()) %>%
add_slide() %>%
ph_with(g7_dml, ph_location()) %>%
add_slide() %>%
ph_with(g8_dml, ph_location()) %>%
add_slide() %>%
ph_with(g9_dml, ph_location()) %>%
base::print(target = here::here("_posts",
"2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr",
"slides",
"demo_one.pptx"))
install.packages("here")
library(here)
read_pptx() %>%
add_slide() %>%
ph_with(g1_dml, ph_location()) %>%
add_slide() %>%
ph_with(g2_dml, ph_location()) %>%
add_slide() %>%
ph_with(g3_dml, ph_location()) %>%
add_slide() %>%
ph_with(g4_dml, ph_location()) %>%
add_slide() %>%
ph_with(g5_dml, ph_location()) %>%
add_slide() %>%
ph_with(g6_dml, ph_location()) %>%
add_slide() %>%
ph_with(g7_dml, ph_location()) %>%
add_slide() %>%
ph_with(g8_dml, ph_location()) %>%
add_slide() %>%
ph_with(g9_dml, ph_location()) %>%
base::print(target = here::here("_posts",
"2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr",
"slides",
"demo_one.pptx"))
read_pptx() %>%
add_slide() %>%
ph_with(g1_dml, ph_location()) %>%
add_slide() %>%
ph_with(g2_dml, ph_location()) %>%
add_slide() %>%
ph_with(g3_dml, ph_location()) %>%
add_slide() %>%
ph_with(g4_dml, ph_location()) %>%
add_slide() %>%
ph_with(g5_dml, ph_location()) %>%
add_slide() %>%
ph_with(g6_dml, ph_location()) %>%
add_slide() %>%
ph_with(g7_dml, ph_location()) %>%
add_slide() %>%
ph_with(g8_dml, ph_location()) %>%
add_slide() %>%
ph_with(g9_dml, ph_location()) %>%
base::print(target = "salida/demo_one.pptx"))
read_pptx() %>%
add_slide() %>%
ph_with(g1_dml, ph_location()) %>%
add_slide() %>%
ph_with(g2_dml, ph_location()) %>%
add_slide() %>%
ph_with(g3_dml, ph_location()) %>%
add_slide() %>%
ph_with(g4_dml, ph_location()) %>%
add_slide() %>%
ph_with(g5_dml, ph_location()) %>%
add_slide() %>%
ph_with(g6_dml, ph_location()) %>%
add_slide() %>%
ph_with(g7_dml, ph_location()) %>%
add_slide() %>%
ph_with(g8_dml, ph_location()) %>%
add_slide() %>%
ph_with(g9_dml, ph_location()) %>%
base::print(target = "salida/demo_one.pptx")
