scale_y_continuous(breaks = seq(0,100,10),
limits = c(0,100)) +
geom_text(aes(x=factor(pais), y=valor, label=lbl, colour=población), family = "IBM Plex Sans Semibold", position = position_dodge(width = .9),
size = 3.5, vjust=0.3, hjust = -0.1) +
labs(x="",
y = "Porcentaje",
subtitle = "En porcentajes",
title = "América Latina (18 países): tasas de pobreza y pobreza extrema, 1990 - 2021",
caption = "Fuente: [[citation needed]]") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold"),
legend.position = "bottom",
legend.title = element_blank()) +
coord_flip()
prot_social %>%
ggplot(aes(fill=población)) +
geom_bar(aes(x=reorder(factor(pais), -n), y=valor), stat="identity", position = "dodge") +
scale_y_continuous(breaks = seq(0,100,10),
limits = c(0,100)) +
geom_text(aes(x=factor(pais), y=valor, label=ifelse(valor != 0, as.character(lbl),""), colour=población), family = "IBM Plex Sans Semibold", position = position_dodge(width = .9),
size = 3.5, vjust=0.3, hjust = -0.1) +
labs(x="",
y = "Porcentaje",
subtitle = "En porcentajes",
title = "América Latina (18 países): tasas de pobreza y pobreza extrema, 1990 - 2021",
caption = "Fuente: [[citation needed]]") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold"),
legend.position = "bottom",
legend.title = element_blank()) +
coord_flip()
prot_social %>%
ggplot(aes(fill=población)) +
geom_bar(aes(x=reorder(factor(pais), -n), y=valor), stat="identity", position = "dodge") +
scale_y_continuous(breaks = seq(0,100,10),
limits = c(0,100)) +
geom_text(aes(x=factor(pais), y=valor, label=ifelse(valor != 0, as.character(lbl),""), colour=población), family = "IBM Plex Sans Semibold", position = position_dodge(width = .9),
size = 3.5, vjust=0.3, hjust = -0.1) +
labs(x="",
y = "Porcentaje",
subtitle = "En porcentajes",
title = "Porcentaje de la fuerza de trabajo excluida de la seguridad social contributiva",
caption = "Fuente: [[citation needed]]") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(plot.title = element_text(face = "bold"),
legend.position = "bottom",
legend.title = element_blank()) +
coord_flip()
library(tidyverse)
library(scales)
library(readr)
library(ggrepel)
library(reshape2)
library(extrafont)
library(cowplot)
library(gt)
#importar####
sati <- read_delim("satisfaccion.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
t_sati <- read_delim("t_sati.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
la_sati <- read_delim("la_sati.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
pibgr_ini <- read_delim("pib.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
idhdes <- read_delim("idh.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
civpol <- read_delim("civpol.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
freedomhouse <- read_delim("freedomhouse.txt",
delim = "\t", escape_double = FALSE,
na = "NA", trim_ws = TRUE)
efectpp <-  read_delim("efectpp.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
efectpp_oecd <-  read_delim("efectpp_oecd.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
regul <-  read_delim("regul.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
intpocos <-  read_delim("int_pocos.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
prot_social <- read_delim("protec_social.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
pobreza <- read_delim("pobreza.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
p90 <- read_delim("noventa.txt",
delim = "\t", escape_double = FALSE,
na = "NA", trim_ws = TRUE)
p99 <- read_delim("noventaynueve.txt",
delim = "\t", escape_double = FALSE,
na = "NA", trim_ws = TRUE)
gini <- read_delim("gini2.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
View(freedomhouse)
freedomhouse %>%
select(pais, region, nivelidhdes, starts_with("pr")) -> dpol
freedomhouse %>%
select(pais, region, nivelidhdes, starts_with("cl")) -> lciv
dpol %>%
pivot_longer(4:30, names_to = "yr", values_to = "dpol") %>%
mutate(yr = str_remove(yr, "pr")) -> dpol
lciv %>%
pivot_longer(4:30, names_to = "yr", values_to = "lciv") %>%
mutate(yr = str_remove(yr, "cl")) -> lciv
lciv %>%
right_join(dpol) %>%
mutate(valor = (lciv+dpol)/2) -> civpol
lciv
civpol
prueba <- civol %>%
mutate(valor = 8 - valor)
prueba <- civpol %>%
mutate(valor = 8 - valor)
prueba
View(civpol)
prueba %>%  count(valor)
prueba <- civpol %>%
mutate(valor = 8 - valor,
valor = valor/7)
prueba %>%  count(valor)
prueba <- civpol %>%
mutate(valor = 7 - valor,
valor = valor/7)
prueba %>%  count(valor)
prueba <- civpol %>%
mutate(valor = 7 - valor,
valor = valor/6)
prueba %>%  count(valor)
civpol %>% count(valor)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
prueba <- civpol %>%
mutate(valor = range01(valor))
civpol %>% count(valor)
prueba %>% count(valor)
prueba <- civpol %>%
mutate(valor = range01(valor),
valor = 1 -valor)
prueba %>% count(valor)
civpol %>%
mutate(iniciofinal = ifelse(yr == 1995 | yr == 2021, "si", "no")) -> civpol
civpol <- civpol %>%
mutate(valor = range01(valor),
valor = 1 -valor)
civpol %>%
mutate(iniciofinal = ifelse(yr == 1995 | yr == 2021, "si", "no")) -> civpol
civpol %>%
filter(region == "al") %>%
group_by(yr) %>%
summarise(valor = round(mean(valor), 2)) -> cp_media_al
cp_media_al %>%
mutate(pais = "América Latina") %>%
mutate(iniciofinal = ifelse(yr == 1995 | yr == 2000 | yr == 2005 |
yr == 2010 | yr == 2015 | yr == 2021,
"si", "no")) -> cp_media_al
civpol %>%
filter(region == "oecd") %>%
group_by(yr) %>%
summarise(valor = round(mean(valor), 2)) -> cp_media_oecd
cp_media_oecd %>%
mutate(pais = "OECD sin América Latina") %>%
mutate(iniciofinal = ifelse(yr == 1995 | yr == 2000 | yr == 2005 |
yr == 2010 | yr == 2015 | yr == 2021,
"si", "no")) -> cp_media_oecd
bind_rows(cp_media_al, cp_media_oecd) -> civpol_region_comp
p_comp <- civpol_region_comp %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
scale_colour_manual(values = c("América Latina" = "#86af49",
"OECD sin América Latina" = "#d57f70")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
labs(title = "",
subtitle = "",
x = "\nAño",
y = "Promedio de puntajes",
caption = "") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size =10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom", legend.title = element_blank()) +
guides(size = "none", colour = guide_legend(nrow = 2))
p_comp
p_comp <- civpol_region_comp %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
scale_colour_manual(values = c("América Latina" = "#86af49",
"OECD sin América Latina" = "#d57f70")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1))
p_comp
p_comp <- civpol_region_comp %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
scale_colour_manual(values = c("América Latina" = "#86af49",
"OECD sin América Latina" = "#d57f70")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1))
p_comp <- civpol_region_comp %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
scale_colour_manual(values = c("América Latina" = "#86af49",
"OECD sin América Latina" = "#d57f70")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
labs(title = "",
subtitle = "",
x = "\nAño",
y = "Promedio de puntajes",
caption = "") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size =10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom", legend.title = element_blank()) +
guides(size = "none", colour = guide_legend(nrow = 2))
p_comp
p_comp <- civpol_region_comp %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
scale_colour_manual(values = c("América Latina" = "#86af49",
"OECD sin América Latina" = "#d57f70")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
labs(title = "",
subtitle = "",
x = "\nAño",
y = "Promedio de puntajes",
caption = "") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size =10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom", legend.title = element_blank()) +
guides(size = "none", colour = guide_legend(nrow = 1))
p_comp <- civpol_region_comp %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = pais, colour = pais)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = pais)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
scale_colour_manual(values = c("América Latina" = "#86af49",
"OECD sin América Latina" = "#d57f70")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995,2000,2005,2010,2015,2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
labs(title = "",
subtitle = "",
x = "\nAño",
y = "Promedio de puntajes",
caption = "") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size =10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom", legend.title = element_blank()) +
guides(size = "none", colour = guide_legend(nrow = 2))
civpol %>%
filter(pais %in% c("Chile", "México", "Brasil", "Perú", "Costa Rica",
"Colombia", "El Salvador", "Uruguay", "Argentina",
"Ecuador")) -> civpol_sel
p_line <- civpol_sel %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = 1, colour = nivelidhdes)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = nivelidhdes)) +
scale_size_manual(values = c("si" = 2, "no" = -1)) +
scale_colour_manual(values = c("muy alto" = "#4285f4",
"alto" = "#34a853",
"medio" = "#fbbc04",
"bajo" = "#ea4335")) +
geom_label_repel(aes(x = yr, y = valor,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 2.5, point.padding = 3, alpha = .67, min.segment.length = 1,
family = "IBM Plex Sans") +
facet_wrap(~reorder(pais, -valor), nrow = 2, ncol = 5) +
scale_x_discrete(breaks = c(1995, 2000, 2005, 2010, 2015, 2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
labs(title = "",
subtitle = "",
x = "\nAño",
y = "",
caption = "",
colour = "Índice de Desarrollo Humano\ndeflactado por Desigualdad") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 8, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom") +
guides(size = "none", colour = guide_legend(nrow = 1))
p_line
civpol %>%
filter(region == "al") %>%
group_by(pais) %>%
summarise(valor = round(mean(valor), 2)) %>%
mutate(yr = "Promedio") %>%
mutate(cuartiles = ntile(valor, 4)) %>%
select(pais, cuartiles) %>%
left_join(y = civpol) %>%
group_by(cuartiles, yr) %>%
summarise(valor = round(mean(valor),2)) %>%
as_tibble() %>%
mutate(iniciofinal = ifelse(yr == 1995 | yr == 2021, "si", "no")) %>%
mutate(cuartiles = case_when(cuartiles == 1 ~ "Primer Cuartil",
cuartiles == 2 ~ "Segundo Cuartil",
cuartiles == 3 ~ "Tercer Cuartil",
cuartiles == 4 ~ "Cuarto Cuartil")) -> civpol_media_al
p_q <- civpol_media_al %>%
ggplot() +
geom_line(aes(x = yr, y = valor, group = cuartiles, colour = cuartiles)) +
geom_point(aes(x = yr, y = valor, size = iniciofinal, colour = cuartiles)) +
scale_size_manual(values = c("si" = 6, "no" = -1)) +
geom_label_repel(aes(x = yr, y = valor, colour = cuartiles,
label = ifelse(iniciofinal == "si", as.character(valor),"")),
size = 4, point.padding = 5, alpha = .67, show.legend = F,
family = "IBM Plex Sans") +
scale_x_discrete(breaks = c(1995, 2000, 2005, 2010, 2015, 2020)) +
scale_y_continuous(limits = c(0,1), breaks = seq(0, 1, 0.1)) +
scale_colour_manual(values = c("Cuarto Cuartil" = "#ea4335",
"Tercer Cuartil" = "#fbbc04",
"Segundo Cuartil" = "#34a853",
"Primer Cuartil" = "#4285f4")) +
labs(title = "",
subtitle = "",
x = "\nAño",
y = "",
caption = "",
colour = "IDH") +
theme_minimal(base_family = "IBM Plex Sans") +
theme(axis.text = element_text(size = 10, angle = 36),
plot.title = element_text(face = "bold"),
legend.position = "bottom") +
guides(size = "none", colour = guide_legend(nrow = 2))
#Graficamos
grid1 <- plot_grid(p_comp, p_line, rel_widths = c(0.8, 1))
grid2 <- plot_grid(p_comp, p_q)
title <- ggdraw() +
draw_label("Derechos Civiles y Políticos",
fontface = "bold",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 14) +
theme(plot.margin = margin(3, 0, 0, 7))
subtitle <- ggdraw() +
draw_label("Índice Freedom House",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 12) +
theme(plot.margin = margin(0, 0, 0, 7))
caption1 <- ggdraw() +
draw_label("Fuente: Freedom House. \nPNUD 2020. Informe sobre Desarrollo Humano.",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 9) +
theme(plot.margin = margin(0, 0, 0, 480))
caption2 <- ggdraw() +
draw_label("Fuente: Freedom House. \nPNUD 2020. Informe sobre Desarrollo Humano.\nNota: El primer cuartil corresponde a Argetina, Chile, Costa Rica Panamá y Uruguay; el segundo a Bolivia, Brasil, El Salvador, Perú y \nR. Dominicana; el tercero a Colombia, Ecuador, Honduras, México y Paraguay; y el cuarto a Cuba, Guatemala, Nicaragua y Venezuela",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 9) +
theme(plot.margin = margin(0, 0, 0, 7))
plot_grid(title, subtitle, grid1, caption1,
ncol = 1,
rel_heights = c(0.05, 0.05, 1, 0.05))
plot_grid(title, subtitle, grid2, caption2,
ncol = 1,
rel_heights = c(0.05, 0.05, 1, 0.1))
subtitle <- ggdraw() +
draw_label("Índice Freedom House - Estandarizado",
fontfamily = "IBM Plex Sans",
x = 0,
hjust = 0,
size = 12) +
theme(plot.margin = margin(0, 0, 0, 7))
plot_grid(title, subtitle, grid1, caption1,
ncol = 1,
rel_heights = c(0.05, 0.05, 1, 0.05))
plot_grid(title, subtitle, grid2, caption2,
ncol = 1,
rel_heights = c(0.05, 0.05, 1, 0.1))
source("G:/Unidades compartidas/PE-IB/Encargos Extra/Gráficos Fabricio/erre/script.R")
library(tidyverse)
library(scales)
library(readr)
library(ggrepel)
library(reshape2)
library(extrafont)
library(cowplot)
library(gt)
sati <- read_delim("entrada/satisfaccion.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
t_sati <- read_delim("entrada/t_sati.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
la_sati <- read_delim("entrada/la_sati.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
pibgr_ini <- read_delim("entrada/pib.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
idhdes <- read_delim("entrada/idh.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
civpol <- read_delim("entrada/civpol.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
freedomhouse <- read_delim("entrada/freedomhouse.txt",
delim = "\t", escape_double = FALSE,
na = "NA", trim_ws = TRUE)
efectpp <-  read_delim("entrada/efectpp.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
efectpp_oecd <-  read_delim("entrada/efectpp_oecd.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
regul <-  read_delim("entrada/regul.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
intpocos <-  read_delim("entrada/int_pocos.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
prot_social <- read_delim("entrada/protec_social.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
pobreza <- read_delim("entrada/pobreza.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
p90 <- read_delim("entrada/noventa.txt",
delim = "\t", escape_double = FALSE,
na = "NA", trim_ws = TRUE)
p99 <- read_delim("entrada/noventaynueve.txt",
delim = "\t", escape_double = FALSE,
na = "NA", trim_ws = TRUE)
gini <- read_delim("entrada/gini2.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
recaud <- read_delim("entrada/recaud.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
recaud_reg <- read_delim("entrada/recaud_reg.txt",
"\t", escape_double = FALSE,
locale = locale(date_names = "es", decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
